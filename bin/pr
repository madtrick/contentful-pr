#!/usr/bin/env node

'use strict';

var optimist = require('optimist');
var fs       = require('fs');
var homedir  = require('home-dir');
var configurationValidator = require('../lib/configuration-validator');

var argv = optimist
  .demand(['base'])
  .alias('a', 'assignee')
  .describe('a', 'Github name of the pull request assignee')
  .alias('b', 'base')
  .describe('b', 'Specify the base branch to merge the pull request into')
  .alias('h', 'help')
  .describe('h', 'This help')
  .alias('t', 'template')
  .alias('v', 'verbose')
  .describe('v', 'Be verbose')
  .describe('t', 'Path to template to be used in pull request message')
  .describe('tp', 'Id of Target Process entity')
  .argv
  ;

var CONFIG_FILE_PATH = '.contentful-pr';
var options          = {
  base     : argv.base,
  template : argv.template,
  tp       : argv.tp,
  assignee : argv.assignee
};

fs.readFile(homedir(CONFIG_FILE_PATH), function (err, data) {
  var logger = require('../lib/logging').logger({verbose: argv.verbose});
  var config;

  if (!data) {
    logger.error('Missing config file');
    return;
  }

  config = JSON.parse(data);

  if (!configurationValidator(config)) {
    logger.error('Some of the configuration parameters are invalid');
    return;
  }

  require('..')(config, options);
});
